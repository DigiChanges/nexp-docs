"use strict";(self.webpackChunknexp_docs=self.webpackChunknexp_docs||[]).push([[3631],{4674:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=t(5893),r=t(1151);const i={},a="RequestID",c={id:"documentation/request-id",title:"RequestID",description:"Returning to the topic of dependency injection, we find an injection at the request level. We accomplish that with the injection handler container middleware. (tsyringe).",source:"@site/docs/documentation/13-request-id.md",sourceDirName:"documentation",slug:"/documentation/request-id",permalink:"/docs/documentation/request-id",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dependency Injection",permalink:"/docs/documentation/dependency-injection"},next:{title:"Exceptions",permalink:"/docs/documentation/exceptions"}},s={},d=[];function h(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"requestid",children:"RequestID"}),"\n",(0,o.jsxs)(n.p,{children:["Returning to the topic of dependency injection, we find an injection at the request level. We accomplish that with the injection handler container middleware. (",(0,o.jsx)(n.code,{children:"tsyringe"}),")."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"\n/** src -> Shared -> Application -> Http -> AppKoa **/\n\n// ...\n\nthis.app.use(ContainerKoaMiddleware);\n\n\n// ...\n\n"})}),"\n",(0,o.jsx)(n.p,{children:"What the middleware does is generate a child container to end up generating a unique context in each request."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"\n/** src -> Shared -> Presentation -> Middlewares -> ContainerKoaMiddleware **/\n\nimport Koa from 'koa';\nimport container from '../../../register';\nimport { createRequestContext } from '../Shared/RequestContext';\n\ntype KoaCtx = Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>;\ntype KoaNext = Koa.Next;\n\nconst ContainerKoaMiddleware = async(ctx: KoaCtx, next: KoaNext) =>\n{\n    ctx.container = container.createChildContainer();\n    createRequestContext(ctx.container);\n\n    await next();\n};\n\nexport default ContainerKoaMiddleware;\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"RequestContext"})," contains the creation of the context with the help of the ",(0,o.jsx)(n.code,{children:"async_hooks"})," package,\nwhen the context is created what happens is the creation of a ",(0,o.jsx)(n.code,{children:"requestId"})," and the child ",(0,o.jsx)(n.code,{children:"container"})," that is created in the middleware."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"export const createRequestContext = (container: DependencyContainer, requestId = nanoId.nanoid()) =>\n{\n    store.clear();\n    const requestInfo = { requestId, container };\n    store.set(asyncHooks.executionAsyncId(), requestInfo);\n    return requestInfo;\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"requestId"})," is unique for each request made to the API, which allows us to recognize each request and also understand more efficiently when calls are made in microservices. So it is easier to detect errors when we have many connected services, since we can use the created requestId to send it through the header and thus detect when something fails and which request was the trigger."]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var o=t(7294);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);