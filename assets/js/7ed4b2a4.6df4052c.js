"use strict";(self.webpackChunknexp_docs=self.webpackChunknexp_docs||[]).push([[4561],{82:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var i=s(5893),o=s(1151);const t={},d="Quick Start",c={id:"documentation/quick-start",title:"Quick Start",description:"NEXP CLI",source:"@site/docs/documentation/03-quick-start.md",sourceDirName:"documentation",slug:"/documentation/quick-start",permalink:"/docs/documentation/quick-start",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Welcome to Node Experience!",permalink:"/docs/documentation/intro"},next:{title:"Structure",permalink:"/docs/documentation/structure"}},l={},a=[{value:"NEXP CLI",id:"nexp-cli",level:2},{value:"Installation",id:"installation",level:2},{value:"Step by Step",id:"step-by-step",level:2},{value:"First of all install nexp cli package globally.",id:"first-of-all-install-nexp-cli-package-globally",level:4},{value:"Currently, there is a <code>create</code> command call, in the future more commands will be added.",id:"currently-there-is-a-create-command-call-in-the-future-more-commands-will-be-added",level:4},{value:"Write the name of the project.",id:"write-the-name-of-the-project",level:4},{value:"Choose the ORM.",id:"choose-the-orm",level:4},{value:"Choose the HTTP library.",id:"choose-the-http-library",level:4},{value:"And wait for each action to complete.",id:"and-wait-for-each-action-to-complete",level:4},{value:"Copy .env.dev to .env and install dependencies with pnpm or npm.",id:"copy-envdev-to-env-and-install-dependencies-with-pnpm-or-npm",level:4},{value:"Execute <code>make dev</code> command or <code>STAGE=dev docker-compose up --build -d</code> to create docker containers.",id:"execute-make-dev-command-or-stagedev-docker-compose-up---build--d-to-create-docker-containers",level:4},{value:"And it&#39;s ready to code.",id:"and-its-ready-to-code",level:4},{value:"Local Environment",id:"local-environment",level:2},{value:"Bash dev.init.sh Content",id:"bash-devinitsh-content",level:2},{value:"Create Push Notifications Keys",id:"create-push-notifications-keys",level:2},{value:"Minio Browser",id:"minio-browser",level:2},{value:"Execute TEST Environment",id:"execute-test-environment",level:2},{value:"Test different folder",id:"test-different-folder",level:2},{value:"How to use TypeORM:",id:"how-to-use-typeorm",level:2},{value:"How to use Mikro-ORM:",id:"how-to-use-mikro-orm",level:2},{value:"TypeORM and MikroORM",id:"typeorm-and-mikroorm",level:2}];function r(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(n.h2,{id:"nexp-cli",children:"NEXP CLI"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/DigiChanges/nexp-cli",children:"Nexp CLI"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["This CLI is made to be able to quickly create the NExp(",(0,i.jsx)(n.a,{href:"https://github.com/DigiChanges/node-experience",children:"https://github.com/DigiChanges/node-experience"}),") boilerplate with all the content you want it to have."]}),"\n",(0,i.jsx)(n.p,{children:"It allows you to choose between Mongoose, TypeORM and MikroORM when it comes to database persistence. In addition, you can also choose between Koa and Express for the HTTP library."}),"\n",(0,i.jsx)(n.p,{children:"This tool allows you to use NExp without the need to modify the code."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["First, install nexp-cli using ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/",children:"npm"})," (we assume you have pre-installed ",(0,i.jsx)(n.a,{href:"https://nodejs.org/",children:"node.js"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"step-by-step",children:"Step by Step"}),"\n",(0,i.jsx)(n.h4,{id:"first-of-all-install-nexp-cli-package-globally",children:"First of all install nexp cli package globally."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"1.png",src:s(4388).Z+"",width:"529",height:"158"})}),"\n",(0,i.jsxs)(n.h4,{id:"currently-there-is-a-create-command-call-in-the-future-more-commands-will-be-added",children:["Currently, there is a ",(0,i.jsx)(n.code,{children:"create"})," command call, in the future more commands will be added."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"2.png",src:s(9370).Z+"",width:"618",height:"216"})}),"\n",(0,i.jsx)(n.h4,{id:"write-the-name-of-the-project",children:"Write the name of the project."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"3.png",src:s(5408).Z+"",width:"467",height:"221"})}),"\n",(0,i.jsx)(n.h4,{id:"choose-the-orm",children:"Choose the ORM."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"4.png",src:s(1549).Z+"",width:"379",height:"302"})}),"\n",(0,i.jsx)(n.h4,{id:"choose-the-http-library",children:"Choose the HTTP library."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"5.png",src:s(3828).Z+"",width:"440",height:"287"})}),"\n",(0,i.jsx)(n.h4,{id:"and-wait-for-each-action-to-complete",children:"And wait for each action to complete."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"6.png",src:s(2489).Z+"",width:"610",height:"400"})}),"\n",(0,i.jsx)(n.h4,{id:"copy-envdev-to-env-and-install-dependencies-with-pnpm-or-npm",children:"Copy .env.dev to .env and install dependencies with pnpm or npm."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"7.png",src:s(4957).Z+"",width:"453",height:"144"})}),"\n",(0,i.jsxs)(n.h4,{id:"execute-make-dev-command-or-stagedev-docker-compose-up---build--d-to-create-docker-containers",children:["Execute ",(0,i.jsx)(n.code,{children:"make dev"})," command or ",(0,i.jsx)(n.code,{children:"STAGE=dev docker-compose up --build -d"})," to create docker containers."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Node"}),"\n",(0,i.jsx)(n.li,{children:"DB"}),"\n",(0,i.jsx)(n.li,{children:"Redis"}),"\n",(0,i.jsx)(n.li,{children:"Mail"}),"\n",(0,i.jsx)(n.li,{children:"Minio"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"8.png",src:s(7889).Z+"",width:"708",height:"195"})}),"\n",(0,i.jsx)(n.h4,{id:"and-its-ready-to-code",children:"And it's ready to code."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"9.png",src:s(2428).Z+"",width:"1917",height:"339"})}),"\n",(0,i.jsx)(n.h2,{id:"local-environment",children:"Local Environment"}),"\n",(0,i.jsx)(n.p,{children:"We can run the project directly with docker compose and then bash where the basic commands to feed the database are located."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Install dependencies. ",(0,i.jsx)(n.code,{children:"pnpm install"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Copy ",(0,i.jsx)(n.code,{children:".env.dev"})," file to ",(0,i.jsx)(n.code,{children:".env"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Then execute ",(0,i.jsx)(n.code,{children:"STAGE=dev docker-compose up --build"})," to up all containers."]}),"\n",(0,i.jsxs)(n.li,{children:["Basically generates an admin user, add roles with permission and get a bucket for minIO. ",(0,i.jsx)(n.code,{children:"docker-compose exec node bash dev.init.sh"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Then generate your new project:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yo generator-nexp-cli\n"})}),"\n",(0,i.jsx)(n.h2,{id:"bash-devinitsh-content",children:"Bash dev.init.sh Content"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"#!/usr/bin/env bash\n\npnpm command addUserRole --role Admin --email user@node.com --firstName node --lastName node --password 12345678 --documentType DNI --documentNumber 12345678 --gender male --phone 541112345678 --country AR --address av.1234 --isSuperAdmin false --birthday 04/07/1990\npnpm command addUserRole --role SuperAdmin --email superadmin@node.com --firstName super --lastName admin --documentType DNI --documentNumber 12345679 --gender male --phone 541112345678 --country AR --address av.1234 --password 12345678 --birthday 05/07/1990 --isSuperAdmin true\npnpm command syncRolesPermission\npnpm command createBucket --name experience --region us-east-1\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-push-notifications-keys",children:"Create Push Notifications Keys"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm docker:command createVapID\n"})}),"\n",(0,i.jsx)(n.h2,{id:"minio-browser",children:"Minio Browser"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"http://localhost:9001/minio",children:"http://localhost:9001/minio"})}),"\n",(0,i.jsx)(n.h2,{id:"execute-test-environment",children:"Execute TEST Environment"}),"\n",(0,i.jsxs)(n.p,{children:["To run the tests, we need to install the packages and transpile the code, we also need the ",(0,i.jsx)(n.code,{children:".env"})," environment variable to exist."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm test\n"})}),"\n",(0,i.jsx)(n.h2,{id:"test-different-folder",children:"Test different folder"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm test src/[Module]/Tests\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example Unique Test"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm test src/Item/Tests\n"})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use-typeorm",children:"How to use TypeORM:"}),"\n",(0,i.jsx)(n.p,{children:"Node experience comes integrated with Mongoose as the default ORM. It also has TypeORM integrated to use any SQL engine\nthat is required."}),"\n",(0,i.jsx)(n.p,{children:"To change from Mongoose to TypeORM the following steps must be followed:"}),"\n",(0,i.jsx)(n.p,{children:"To take an example we are going to use Postgres."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Environment variables have to be changed."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"DB_PORT=27017 -> DB_PORT=5432"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"DB_TYPE_DEFAULT=Mongoose -> DB_TYPE_DEFAULT=TypeORM"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"DB_TYPE=postgresql -> DB_TYPE=postgres"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Important note. The filters and sorting files of each entity should also have a change depending on the relationship.\nFor example UserSort has"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"class UserSort extends Sort {\n   static readonly EMAIL: string = 'email';\n   static readonly CREATED_AT: string = 'createdAt';\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This should change to"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"   class UserSort extends Sort {\n   static readonly EMAIL: string = 'i.email';\n   static readonly CREATED_AT: string = 'i.createdAt';\n   }\n"})}),"\n",(0,i.jsx)(n.p,{children:"This is because typeORM and SQL aliases are used and in this case it is necessary for you to\nunderstand each filter and each order that we need to add."}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Finally, we have a command with Makefile to lift the corresponding containers.","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"make dev_sql"})}),"\n",(0,i.jsxs)(n.li,{children:["The command with docker compose would be:\n",(0,i.jsx)(n.code,{children:"STAGE=dev docker-compose -f docker-compose.yml -f docker-compose.sql.yml up --build -d"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This above command replaces the mongo container with the postgres container."}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use-mikro-orm",children:"How to use Mikro-ORM:"}),"\n",(0,i.jsx)(n.p,{children:"To change to Mikro-ORM the following steps must be followed:"}),"\n",(0,i.jsx)(n.p,{children:"To take an example we are going to use Postgres."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Environment variables have to be changed."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"DB_PORT=27017 -> DB_PORT=5432"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"DB_TYPE_DEFAULT=Mongoose -> DB_TYPE_DEFAULT=MikroORM"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"DB_TYPE=postgresql"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Finally, we have a command with Makefile to lift the corresponding containers."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"make dev_sql"})}),"\n",(0,i.jsx)(n.li,{children:"The command with docker compose would be:"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"STAGE=dev docker-compose -f docker-compose.yml -f docker-compose.sql.yml up --build -d"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"typeorm-and-mikroorm",children:"TypeORM and MikroORM"}),"\n",(0,i.jsx)(n.p,{children:"In the case of not using Mongoose you have to synchronize the database tables. With this command you can synchronize them regardless if you are using MikroORM or TypeORM."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose exec node bash\npnpm sync-db\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},4388:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/1-723b4616b87a8ef040df0b99cae53326.png"},9370:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/2-8185906e6c0d2e728a3c341a8b3e8002.png"},5408:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/3-845b1b2751c2a1446963f555ff367360.png"},1549:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/4-90f7336122418ab925d22ae1cfa0dfb6.png"},3828:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/5-ad3e6c87ce6b3a31030a47a0e0c17ed9.png"},2489:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/6-a367c60459389f9c1233595749db2f8c.png"},4957:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/7-f10c91931b7d1b24f1b3a334dbc3340d.png"},7889:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/8-137e1934cff14998e9342457c79ec812.png"},2428:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/9-5a3dc5537d94ea8211e31a5e78caa518.png"},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>d});var i=s(7294);const o={},t=i.createContext(o);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);